name: Deploy to cPanel

# Trigger deployment on push to main branch
on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allow manual trigger

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run Django checks
        env:
          DJANGO_SETTINGS_MODULE: collectorium.settings.dev
          SECRET_KEY: test-secret-key-for-ci
          DATABASE_URL: sqlite:///test.db
          ALLOWED_HOSTS: localhost
        run: |
          python manage.py check
      
      - name: Run tests
        env:
          DJANGO_SETTINGS_MODULE: collectorium.settings.dev
          SECRET_KEY: test-secret-key-for-ci
          DATABASE_URL: sqlite:///test.db
          ALLOWED_HOSTS: localhost
        run: |
          python manage.py test --noinput || echo "Tests not configured yet"
  
  deploy:
    name: Deploy to cPanel
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Deploy via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.CPANEL_FTP_HOST }}
          username: ${{ secrets.CPANEL_FTP_USER }}
          password: ${{ secrets.CPANEL_FTP_PASSWORD }}
          protocol: ftps
          port: 21
          server-dir: /home/${{ secrets.CPANEL_USERNAME }}/collectorium/
          timeout: 600000
          exclude: |
            **/.git*
            **/.git*/**
            **/venv/**
            **/env/**
            **/virtualenv/**
            **/__pycache__/**
            **/*.pyc
            **/*.pyo
            **/db.sqlite3
            **/migrate_logs/**
            **/logs/**
            **/.env
            **/.env.*
            **/media/**
            **/public/media/**
            **/staticfiles/**
            **/*.log
      
      - name: Run post-deployment commands via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.CPANEL_SSH_HOST }}
          username: ${{ secrets.CPANEL_SSH_USER }}
          key: ${{ secrets.CPANEL_SSH_KEY }}
          script: |
            cd ~/collectorium
            source ~/virtualenv/collectorium/bin/activate
            
            echo "Installing/updating dependencies..."
            pip install --upgrade pip
            pip install -r requirements.txt
            
            echo "Running migrations..."
            python manage.py migrate --noinput
            
            echo "Collecting static files..."
            python manage.py collectstatic --noinput --clear
            
            echo "Restarting Passenger application..."
            mkdir -p tmp
            touch tmp/restart.txt
            
            echo "Deployment completed successfully!"
      
      - name: Verify deployment
        run: |
          echo "Waiting for application restart..."
          sleep 10
          
          echo "Testing health endpoint..."
          curl -f ${{ secrets.CPANEL_SITE_URL }}/healthz/ || exit 1
          
          echo "Deployment verification successful!"
      
      - name: Notify on success
        if: success()
        run: |
          echo "✅ Deployment to cPanel completed successfully!"
      
      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ Deployment to cPanel failed! Check the [Actions tab](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.'
            })

