# Passenger/cPanel Configuration for Collectorium
# This file is typically auto-generated by cPanel's "Setup Python App" interface
# Manual edits for custom requirements

# Enable Passenger WSGI
PassengerEnabled On

# Set application root (will be configured by cPanel)
# PassengerAppRoot /home/USERNAME/collectorium

# Python version (set via cPanel interface)
# PassengerPython /home/USERNAME/virtualenv/collectorium/bin/python

# =============================================================================
# SSL/HTTPS Redirect (optional - Django handles this via SECURE_SSL_REDIRECT)
# =============================================================================

# Uncomment if you want Apache-level HTTPS redirect (redundant with Django setting)
# RewriteEngine On
# RewriteCond %{HTTPS} off
# RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

# =============================================================================
# Error Pages
# =============================================================================

ErrorDocument 404 /404.html
ErrorDocument 500 /500.html
ErrorDocument 403 /403.html

# =============================================================================
# Security Headers (backup - Django sets most of these)
# =============================================================================

<IfModule mod_headers.c>
    # Content Security
    Header set X-Content-Type-Options "nosniff"
    Header set X-Frame-Options "DENY"
    Header set X-XSS-Protection "1; mode=block"
    Header set Referrer-Policy "strict-origin-when-cross-origin"
    
    # Django sets HSTS via settings, but backup here
    # Header set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
</IfModule>

# =============================================================================
# File Access Restrictions
# =============================================================================

# Deny access to hidden files (except .well-known for SSL verification)
<FilesMatch "^\.(?!well-known)">
    Order allow,deny
    Deny from all
</FilesMatch>

# Deny access to sensitive file types
<FilesMatch "\.(bak|conf|dist|fla|in[ci]|log|orig|psd|sh|sql|sw[op])|~$">
    Order allow,deny
    Deny from all
</FilesMatch>

# Deny access to Python source files
<FilesMatch "\.(py|pyc|pyo)$">
    Order allow,deny
    Deny from all
</FilesMatch>

# Allow passenger_wsgi.py (required for Passenger)
<Files "passenger_wsgi.py">
    Order allow,deny
    Allow from all
</Files>

# Protect configuration and environment files
<FilesMatch "^(\.env|\.env\..*|settings\.py|.*\.conf|.*\.yml|.*\.yaml)$">
    Order allow,deny
    Deny from all
</FilesMatch>

# Allow .cpanel.yml for Git deployment (cPanel needs it)
<Files ".cpanel.yml">
    Order allow,deny
    Allow from all
</Files>

# =============================================================================
# Static File Handling
# =============================================================================

# WhiteNoise serves static files via Django, so no Apache config needed
# Media files can be served by Django in development
# For production, you may want to serve media via Apache:

# Alias /media/ /home/USERNAME/collectorium/media/
# <Directory /home/USERNAME/collectorium/media/>
#     Options -Indexes
#     Require all granted
# </Directory>

# =============================================================================
# Performance & Caching
# =============================================================================

<IfModule mod_expires.c>
    ExpiresActive On
    
    # Static assets (WhiteNoise handles these with cache busting)
    ExpiresByType image/jpeg "access plus 1 year"
    ExpiresByType image/png "access plus 1 year"
    ExpiresByType image/gif "access plus 1 year"
    ExpiresByType image/webp "access plus 1 year"
    ExpiresByType image/svg+xml "access plus 1 year"
    ExpiresByType text/css "access plus 1 year"
    ExpiresByType application/javascript "access plus 1 year"
    ExpiresByType font/woff2 "access plus 1 year"
</IfModule>

# Compression (if not handled by Passenger/Django)
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript application/javascript application/json
</IfModule>
